how to compile:

for mac
> gcc -framework OpenGL -framework GLUT -o run ./*.c
> ./run


References:

sounds
・https://downloads.khinsider.com/game-soundtracks/album/super-mario-64-soundtrack/06-slider.mp3
・http://themushroomkingdom.net/media/sm64/wav


ideas:

ペンギンの動きに関して：
スライダーをマス目で作っているから、スタート地点からゴール地点までの最短経路を算出して(「迷路の最短路問題」幅優先探索)、
その経路を沿うようにペンギンを動かす。
(ペンギンを動かすための関数を別に用意する。forkで子プロセスを生成して、ペンギンの制御は完全にこのプロセスに任せる。
そのプロセスが経路の計算をし、その後ペンギンの動かす処理を行う。)
ペンギンとマリオの移動速度は同じにして、ただし当然ながらペンギンは飛べず（ジャンプができない）、
またマリオは斜め方向にも移動もできるようにすれば、それなりに真剣勝負として成り立つ。
(ペンギンはコース形状をあらかじめ知っている。プレイヤーは、基本的にコース形状は見える範囲内でしか知り得ない。)
スライダーがマス目である限り、どのような形状に変更しても、ペンギンの動きは自動で制御できる。
[追加機能]=>プレイヤーが自分でスライダーの形状を設計できる機能をつける。(sliderMap[][]を初期化)
スタート地点に黄色い円形の地点を設け、それを踏むと画面が切り替わる。
コース描画画面になる。画面にグリッドを表示し、マウスでクリックした位置に色をつけ、sliderMap[][]に'*'を入れる。
=>質を上げるには、ペンギンとの当たり判定は必要。
=>ハイスコア更新を実現するには、データベースを使うまでもなく、作業用ファイルへのread(),write()で対処可能。
コースが毎回ランダムで描画される機能を追加しても面白い。
＝＞この場合、確率的にコースを設計する。70%が埋まるようになど充填率だと道という感じでなくなる。
＝＞縦につながる確率が80%、横は50%、のように、縦横異なる確率でランダムに描画する。